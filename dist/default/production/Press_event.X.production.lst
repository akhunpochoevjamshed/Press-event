

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Jun 27 16:10:03 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.36
    15                           ; Generated 28/01/2022 GMT
    16                           ; 
    17                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  000B                     _INTCONbits	set	11
   170  0008                     _PORTDbits	set	8
   171  0059                     _INTF	set	89
   172  0088                     _TRISDbits	set	136
   173  0086                     _TRISBbits	set	134
   174  0081                     _OPTION_REG	set	129
   175                           
   176                           	psect	cinit
   177  000F                     start_initialization:	
   178                           ; #config settings
   179                           
   180  000F                     __initialization:
   181                           
   182                           ; Clear objects allocated to COMMON
   183  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   184  0010                     end_of_initialization:	
   185                           ;End of C runtime variable initialization code
   186                           
   187  0010                     __end_of__initialization:
   188  0010  0183               	clrf	3
   189  0011  120A  118A  2814   	ljmp	_main	;jump to C main() function
   190                           
   191                           	psect	bssCOMMON
   192  0075                     __pbssCOMMON:
   193  0075                     _PORTB0_PRESSED:
   194  0075                     	ds	1
   195                           
   196                           	psect	cstackCOMMON
   197  0070                     __pcstackCOMMON:
   198  0070                     ?_ISR:
   199  0070                     ??_ISR:	
   200                           ; 1 bytes @ 0x0
   201                           
   202  0070                     ?_main:	
   203                           ; 1 bytes @ 0x0
   204                           
   205                           
   206                           ; 1 bytes @ 0x0
   207  0070                     	ds	2
   208  0072                     ??_main:
   209                           
   210                           ; 1 bytes @ 0x2
   211  0072                     	ds	3
   212                           
   213                           	psect	maintext
   214  0014                     __pmaintext:	
   215 ;;
   216 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   217 ;;
   218 ;; *************** function _main *****************
   219 ;; Defined at:
   220 ;;		line 22 in file "main.c"
   221 ;; Parameters:    Size  Location     Type
   222 ;;		None
   223 ;; Auto vars:     Size  Location     Type
   224 ;;		None
   225 ;; Return value:  Size  Location     Type
   226 ;;                  1    wreg      void 
   227 ;; Registers used:
   228 ;;		wreg, status,2, status,0
   229 ;; Tracked objects:
   230 ;;		On entry : B00/0
   231 ;;		On exit  : 0/0
   232 ;;		Unchanged: 0/0
   233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   234 ;;      Params:         0       0       0       0       0
   235 ;;      Locals:         0       0       0       0       0
   236 ;;      Temps:          3       0       0       0       0
   237 ;;      Totals:         3       0       0       0       0
   238 ;;Total ram usage:        3 bytes
   239 ;; Hardware stack levels required when called: 1
   240 ;; This function calls:
   241 ;;		Nothing
   242 ;; This function is called by:
   243 ;;		Startup code after reset
   244 ;; This function uses a non-reentrant model
   245 ;;
   246                           
   247  0014                     _main:	
   248                           ;psect for function _main
   249                           
   250                           
   251                           ;main.c: 23: PORTB0_PRESSED = 0;
   252                           
   253                           ;incstack = 0
   254                           ; Regs used in _main: [wreg+status,2+status,0]
   255  0014  01F5               	clrf	_PORTB0_PRESSED
   256                           
   257                           ;main.c: 25: OPTION_REG = 0;
   258  0015  1683               	bsf	3,5	;RP0=1, select bank1
   259  0016  1303               	bcf	3,6	;RP1=0, select bank1
   260  0017  0181               	clrf	1	;volatile
   261                           
   262                           ;main.c: 27: INTCONbits.GIE = 1;
   263  0018  178B               	bsf	11,7	;volatile
   264                           
   265                           ;main.c: 28: INTCONbits.PEIE = 1;
   266  0019  170B               	bsf	11,6	;volatile
   267                           
   268                           ;main.c: 29: INTCONbits.INTE = 1;
   269  001A  160B               	bsf	11,4	;volatile
   270                           
   271                           ;main.c: 31: TRISBbits.TRISB0 = 1;
   272  001B  1406               	bsf	6,0	;volatile
   273                           
   274                           ;main.c: 32: TRISDbits.TRISD0 = 0;
   275  001C  1008               	bcf	8,0	;volatile
   276                           
   277                           ;main.c: 34: PORTDbits.RD0 = 0;
   278  001D  1283               	bcf	3,5	;RP0=0, select bank0
   279  001E  1303               	bcf	3,6	;RP1=0, select bank0
   280  001F  1008               	bcf	8,0	;volatile
   281  0020                     l577:
   282                           
   283                           ;main.c: 37: if ( PORTB0_PRESSED == 1 ) {
   284  0020  0375               	decf	_PORTB0_PRESSED,w
   285  0021  1D03               	btfss	3,2
   286  0022  2820               	goto	l577
   287                           
   288                           ;main.c: 38: _delay((unsigned long)((500)*(2e6/4000.0)));
   289  0023  3002               	movlw	2
   290  0024  00F4               	movwf	??_main+2
   291  0025  3045               	movlw	69
   292  0026  00F3               	movwf	??_main+1
   293  0027  30A9               	movlw	169
   294  0028  00F2               	movwf	??_main
   295  0029                     u27:
   296  0029  0BF2               	decfsz	??_main,f
   297  002A  2829               	goto	u27
   298  002B  0BF3               	decfsz	??_main+1,f
   299  002C  2829               	goto	u27
   300  002D  0BF4               	decfsz	??_main+2,f
   301  002E  2829               	goto	u27
   302  002F  2830               	nop2
   303                           
   304                           ;main.c: 39: PORTDbits.RD0 = 0;
   305  0030  1283               	bcf	3,5	;RP0=0, select bank0
   306  0031  1303               	bcf	3,6	;RP1=0, select bank0
   307  0032  1008               	bcf	8,0	;volatile
   308                           
   309                           ;main.c: 41: PORTB0_PRESSED = 0;
   310  0033  01F5               	clrf	_PORTB0_PRESSED
   311  0034  2820               	goto	l577
   312  0035                     __end_of_main:
   313                           
   314                           	psect	text1
   315  0035                     __ptext1:	
   316 ;; *************** function _ISR *****************
   317 ;; Defined at:
   318 ;;		line 15 in file "main.c"
   319 ;; Parameters:    Size  Location     Type
   320 ;;		None
   321 ;; Auto vars:     Size  Location     Type
   322 ;;		None
   323 ;; Return value:  Size  Location     Type
   324 ;;                  1    wreg      void 
   325 ;; Registers used:
   326 ;;		None
   327 ;; Tracked objects:
   328 ;;		On entry : 0/0
   329 ;;		On exit  : 0/0
   330 ;;		Unchanged: 0/0
   331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   332 ;;      Params:         0       0       0       0       0
   333 ;;      Locals:         0       0       0       0       0
   334 ;;      Temps:          2       0       0       0       0
   335 ;;      Totals:         2       0       0       0       0
   336 ;;Total ram usage:        2 bytes
   337 ;; Hardware stack levels used: 1
   338 ;; This function calls:
   339 ;;		Nothing
   340 ;; This function is called by:
   341 ;;		Interrupt level 1
   342 ;; This function uses a non-reentrant model
   343 ;;
   344                           
   345  0035                     _ISR:	
   346                           ;psect for function _ISR
   347                           
   348                           
   349                           ;main.c: 16: PORTDbits.RD0 = 1;
   350  0035  1283               	bcf	3,5	;RP0=0, select bank0
   351  0036  1303               	bcf	3,6	;RP1=0, select bank0
   352  0037  1408               	bsf	8,0	;volatile
   353                           
   354                           ;main.c: 17: PORTB0_PRESSED = 1;
   355  0038  01F5               	clrf	_PORTB0_PRESSED
   356  0039  0AF5               	incf	_PORTB0_PRESSED,f
   357                           
   358                           ;main.c: 19: INTF = 0;
   359  003A  108B               	bcf	11,1	;volatile
   360  003B  0871               	movf	??_ISR+1,w
   361  003C  008A               	movwf	10
   362  003D  0E70               	swapf	??_ISR,w
   363  003E  0083               	movwf	3
   364  003F  0EFE               	swapf	126,f
   365  0040  0E7E               	swapf	126,w
   366  0041  0009               	retfie
   367  0042                     __end_of_ISR:
   368  007E                     btemp	set	126	;btemp
   369  007E                     wtemp0	set	126
   370                           
   371                           	psect	intentry
   372  0004                     __pintentry:	
   373                           ;incstack = 0
   374                           ; Regs used in _ISR: []
   375                           
   376  0004                     interrupt_function:
   377  007E                     saved_w	set	btemp
   378  0004  00FE               	movwf	btemp
   379  0005  0E03               	swapf	3,w
   380  0006  00F0               	movwf	??_ISR
   381  0007  080A               	movf	10,w
   382  0008  00F1               	movwf	??_ISR+1
   383  0009  120A  118A  2835   	ljmp	_ISR
   384                           
   385                           	psect	idloc
   386                           
   387                           ;Config register IDLOC0 @ 0x2000
   388                           ;	unspecified, using default values
   389  2000                     	org	8192
   390  2000  3FFF               	dw	16383
   391                           
   392                           ;Config register IDLOC1 @ 0x2001
   393                           ;	unspecified, using default values
   394  2001                     	org	8193
   395  2001  3FFF               	dw	16383
   396                           
   397                           ;Config register IDLOC2 @ 0x2002
   398                           ;	unspecified, using default values
   399  2002                     	org	8194
   400  2002  3FFF               	dw	16383
   401                           
   402                           ;Config register IDLOC3 @ 0x2003
   403                           ;	unspecified, using default values
   404  2003                     	org	8195
   405  2003  3FFF               	dw	16383
   406                           
   407                           	psect	config
   408                           
   409                           ;Config register CONFIG @ 0x2007
   410                           ;	Oscillator Selection bits
   411                           ;	FOSC = XT, XT oscillator
   412                           ;	Watchdog Timer Enable bit
   413                           ;	WDTE = OFF, WDT disabled
   414                           ;	Power-up Timer Enable bit
   415                           ;	PWRTE = ON, PWRT enabled
   416                           ;	Brown-out Reset Enable bit
   417                           ;	BOREN = ON, BOR enabled
   418                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   419                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   420                           ;	Data EEPROM Memory Code Protection bit
   421                           ;	CPD = OFF, Data EEPROM code protection off
   422                           ;	Flash Program Memory Write Enable bits
   423                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   424                           ;	In-Circuit Debugger Mode bit
   425                           ;	DEBUG = 0x1, unprogrammed default
   426                           ;	Flash Program Memory Code Protection bit
   427                           ;	CP = OFF, Code protection off
   428  2007                     	org	8199
   429  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Jun 27 16:10:03 2022

                     u27 0029                      l577 0020                      _ISR 0035  
                   ?_ISR 0070                     _INTF 0059                     _main 0014  
                   btemp 007E                     start 000C                    ??_ISR 0070  
                  ?_main 0070                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0035  
                 ??_main 0072                   saved_w 007E           _PORTB0_PRESSED 0075  
__end_of__initialization 0010           __pcstackCOMMON 0070               __pmaintext 0014  
             __pintentry 0004                  __ptext1 0035     end_of_initialization 0010  
              _PORTDbits 0008                _TRISBbits 0086                _TRISDbits 0088  
    start_initialization 000F              __end_of_ISR 0042              __pbssCOMMON 0075  
              ___latbits 0002        interrupt_function 0004               _INTCONbits 000B  
               intlevel1 0000               _OPTION_REG 0081  
